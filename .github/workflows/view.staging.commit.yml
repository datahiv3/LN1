name: DataHive LN1 Staging View for per Commit

on:
  push:
    branches: [main]
    paths:
      - "view/**"
      - ".github/workflows/view.staging.commit.yml"
  workflow_dispatch:

env:
  AWS_REGION: us-west-1
  URL: commit-${{ github.run_id }}.datahive.p10node.com

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-commit.datahive.p10node.com-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-commit.datahive.p10node.com-

      - name: Install dependencies
        shell: bash
        working-directory: ./view
        run: |
          pnpm --ignore-workspace install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create bucket in S3
        run: |
          aws s3api create-bucket --bucket ${{ env.URL }} --region ${{ env.AWS_REGION }} --create-bucket-configuration LocationConstraint=${{ env.AWS_REGION }}
          aws s3api put-bucket-ownership-controls --bucket ${{ env.URL }} --ownership-controls '{"Rules": [{"ObjectOwnership": "BucketOwnerPreferred"}]}'
          aws s3api put-public-access-block --bucket ${{ env.URL }} --public-access-block-configuration BlockPublicAcls=false
          aws s3api put-bucket-acl --bucket "${{ env.URL }}" --acl public-read
          aws s3 website s3://${{ env.URL }} --index-document index.html --error-document index.html

      - name: Build Website
        working-directory: ./view
        run: pnpm build
        env:
          VITE_STAGE: staging
          VITE_WC_PROJECT_ID: 785959e994f4aa0df486cb6affa2cb67
          VITE_API_URL: https://staging-api.datahive.p10node.com
          VITE_GOOGLE_GA: ""
          VITE_GOOGLE_RECAPTCHA: 6LcJxVkqAAAAAG5DDvY843EJHZXY95kuiSMWzDDo

      - name: Push data to S3
        working-directory: ./view
        run: aws s3 sync dist/ s3://${{ env.URL }}/ --acl public-read

      - uses: Jake4-CX/actions-cloudflare-dns@v1.0.0
        with:
          type: "CNAME"
          name: "${{ env.URL }}"
          content: "${{ env.URL }}.s3-website-${{ env.AWS_REGION }}.amazonaws.com"
          ttl: 1
          proxied: true
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
          zone: ${{ secrets.CLOUDFLARE_ZONE }}

      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          # -4599568134
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}

            See updates: https://${{ env.URL }}
